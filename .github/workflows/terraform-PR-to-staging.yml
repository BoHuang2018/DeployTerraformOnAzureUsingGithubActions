name: 'Terraform-PR-to-Staging'
run-name: Terraform format and validation check in PR to branch staging.

on:
  pull_request:
    types:
      - opened
      - edited
    branches:
      - staging

jobs:
  terraform:
    name: 'Terraform'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID_DEFAULT }}
    runs-on: ubuntu-latest
    environment: staging

    # use the bash shell regardless of the Github Actions runner is unbuntu/macos/windows
    defaults:
      run:
        shell: bash

    steps:
      # Checkout the repository to the Github Actions runner
      - name: Checkout
        uses: actions/checkout@v3

      # Install the lastest version of Terraform CLI and configure the Terraform CLI configuration file with
      # a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      # Initialize a new or existing Terraform working directory by creating initial files,
      # loading any remote state, downloading modules, etc.
      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init -backend=false

      # Validate the tf files
      - name: Terraform Validation
        working-directory: ./terraform
        run: terraform validate